DELIMITER //
CREATE PROCEDURE GETEMPLOYEEBYCODE(IN CODE CHAR(5)) BEGIN
	DECLARE EMPLOYEENAME CHAR(20);
	DECLARE EMPLOYEECURSOR CURSOR FOR
		SELECT EMP_NAME
			FROM EMP
			WHERE EMP_CODE = CODE;
	DECLARE EXIT HANDLER
		FOR NOT FOUND
		SELECT 'EMPLOYEE CODE MISMATCH' AS 'ERROR';
	OPEN EMPLOYEECURSOR;
	FETCH EMPLOYEECURSOR INTO EMPLOYEENAME;
	CLOSE EMPLOYEECURSOR;
	SELECT EMPLOYEENAME;
END //

CREATE PROCEDURE INSERTEMPLOYEE(
	IN EMPLOYEECODE CHAR(5),
	IN DEPARTMENTCODE CHAR(5)
) BEGIN
	IF (
		SELECT EMP_CODE
			FROM EMP
			WHERE EMP_CODE = EMPLOYEECODE
	) IS NULL AND (
		SELECT DEPT_CODE
			FROM DEPARTMENT
			WHERE DEPT_CODE = DEPARTMENTCODE
	) IS NOT NULL THEN
		INSERT INTO EMP (
			EMP_CODE,
			DEPT_CODE
		) VALUES (
			EMPLOYEECODE,
			DEPARTMENTCODE
		);
	ELSE
		SELECT 'CANNOT INSERT' AS 'ERROR';
	END IF;
END //

CREATE PROCEDURE TOPSALARIES(IN TOPCOUNT INT) BEGIN
	DECLARE NAME CHAR(20);
	DECLARE PAY INT;
	DECLARE ITERATOR INT DEFAULT TOPCOUNT;
	DECLARE EMPLOYEECURSOR CURSOR FOR
		SELECT EMP_NAME, BASIC
			FROM EMP
			ORDER BY BASIC DESC;
	DECLARE EXIT HANDLER
		FOR NOT FOUND
		SELECT 'NOT ENOUGH EMPLOYEES' AS 'ERROR';
	OPEN EMPLOYEECURSOR;
	WHILE ITERATOR > 0 DO
		FETCH EMPLOYEECURSOR INTO NAME, PAY;
		SELECT NAME;
		SET ITERATOR = ITERATOR - 1;
	END WHILE;
	CLOSE EMPLOYEECURSOR;
END //

CREATE PROCEDURE DELETEDEPARTMENT(IN DEPARTMENTNAME CHAR(15)) BEGIN
	DECLARE COUNTER INT DEFAULT 0;
	DECLARE MORE INT DEFAULT TRUE;
	DECLARE DELETECODE CHAR(5);
	DECLARE EMPLOYEECURSOR CURSOR FOR
		SELECT EMP_CODE
			FROM EMP
			WHERE DEPT_CODE = DEPARTMENTNAME;
	DECLARE CONTINUE HANDLER
		FOR NOT FOUND BEGIN
			SET MORE = FALSE;
			SELECT COUNTER;
			CLOSE EMPLOYEECURSOR;
		END;
	OPEN EMPLOYEECURSOR;
	WHILE MORE DO
		FETCH EMPLOYEECURSOR INTO DELETECODE;
		DELETE FROM EMP WHERE EMP_CODE = DELETECODE;
		SET COUNTER = COUNTER + 1;
	END WHILE;
END //
DELIMITER ;

CREATE TABLE ORDERMAST (
	ORDER_NO CHAR(5) PRIMARY KEY,
	ORDER_DT DATE
);

CREATE TABLE ORDERDETAILS (
	ORDER_NO CHAR(5),
	ITEM_NO CHAR(5),
	QTY INT,
	PRIMARY KEY(ORDER_NO, ITEM_NO)
);

CREATE TABLE DELIVERYMAST (
	DELV_NO CHAR(5) PRIMARY KEY,
	ORDER_NO CHAR(5),
	DELV_DT DATE
);

CREATE TABLE DELIVERYDETAILS (
	DELV_NO CHAR(5),
	ITEM_NO CHAR(5),
	QTY INT,
	PRIMARY KEY(DELV_NO, ITEM_NO)
);

INSERT INTO ORDERMAST VALUES (
	'00001',
	'2015-10-30'
);

INSERT INTO ORDERDETAILS VALUES (
	'00001',
	'00001',
	1
);

INSERT INTO ORDERMAST VALUES (
	'00002',
	'2015-10-30'
);

INSERT INTO ORDERDETAILS VALUES (
	'00002',
	'00001',
	2
);

INSERT INTO ORDERDETAILS VALUES (
	'00002',
	'00002',
	2
);

INSERT INTO DELIVERYMAST VALUES (
	'00001',
	'00001',
	'2015-10-30'
);

INSERT INTO DELIVERYDETAILS VALUES (
	'00001',
	'00001',
	1
);

INSERT INTO DELIVERYMAST VALUES (
	'00002',
	'00002',
	'2015-10-30'
);

INSERT INTO DELIVERYDETAILS VALUES (
	'00002',
	'00001',
	2
);

DELIMITER //
CREATE PROCEDURE FINDPENDING(IN STARTDATE DATE, IN ENDDATE DATE) BEGIN
	DECLARE ORDERNUMBER CHAR(5);
	DECLARE DELIVERYNUMBER CHAR(5);
	DECLARE MORE INT DEFAULT TRUE;
	DECLARE ORDERNUMBERCURSOR CURSOR FOR
		SELECT ORDER_NO
			FROM ORDERMAST
			WHERE STARTDATE <= ORDER_DT
			AND ORDER_DT <= ENDDATE;
	DECLARE CONTINUE HANDLER
		FOR NOT FOUND BEGIN
			SET MORE = FALSE;
			CLOSE ORDERNUMBERCURSOR;
		END;
	OPEN ORDERNUMBERCURSOR;
	WHILE MORE DO
		FETCH ORDERNUMBERCURSOR INTO ORDERNUMBER;
		SELECT DELV_NO INTO DELIVERYNUMBER
			FROM DELIVERYMAST
			WHERE ORDER_NO = ORDERNUMBER;
		SELECT ORDER_NO, ITEM_NO
			FROM ORDERDETAILS
			WHERE ORDER_NO = ORDERNUMBER
			AND QTY > (
				SELECT IFNULL(SUM(QTY), 0)
					FROM DELIVERYDETAILS
					WHERE DELV_NO = DELIVERYNUMBER
					AND ITEM_NO = ORDERDETAILS.ITEM_NO
			);
	END WHILE;
END //
DELIMITER ;

CREATE TABLE LEAVES (
	EMP_NO CHAR(5),
	MONTH CHAR(3),
	NO_DAYS INT,
	PRIMARY KEY(EMP_NO, MONTH)
);
